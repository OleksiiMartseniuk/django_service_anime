# Generated by Django 4.0.5 on 2024-01-13 19:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AniLibriaType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_string', models.CharField(max_length=255)),
                ('type', models.IntegerField(choices=[(0, 'Movie'), (1, 'TV'), (2, 'OVA'), (3, 'ONA'), (4, 'Special'), (5, 'WEB')])),
                ('episodes', models.CharField(blank=True, max_length=255, null=True)),
                ('length', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnimeVost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anime_id', models.IntegerField(unique=True)),
                ('title_ru', models.CharField(blank=True, max_length=255)),
                ('title_en', models.CharField(blank=True, max_length=255)),
                ('rating', models.IntegerField(default=0)),
                ('votes', models.IntegerField(default=0)),
                ('description', models.TextField(blank=True)),
                ('director', models.CharField(blank=True, max_length=100, null=True)),
                ('url_image_preview', models.ImageField(blank=True, null=True, upload_to='preview/')),
                ('year', models.CharField(blank=True, max_length=20)),
                ('timer', models.IntegerField(default=0)),
                ('type', models.CharField(blank=True, max_length=30)),
                ('day_week', models.IntegerField(blank=True, choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], default=None, null=True)),
                ('anons', models.BooleanField(default=False)),
                ('anons_date', models.DateField(blank=True, null=True)),
                ('indefinite_exit', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('anime_composed', models.ManyToManyField(blank=True, to='anime.animevost')),
            ],
        ),
        migrations.CreateModel(
            name='Franchise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('franchise_id', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decor', models.ManyToManyField(blank=True, related_name='decor', to='anime.person')),
                ('editing', models.ManyToManyField(blank=True, related_name='editing', to='anime.person')),
                ('timing', models.ManyToManyField(blank=True, related_name='timing', to='anime.person')),
                ('translator', models.ManyToManyField(blank=True, related_name='translator', to='anime.person')),
                ('voice', models.ManyToManyField(blank=True, related_name='voice', to='anime.person')),
            ],
        ),
        migrations.CreateModel(
            name='SeriesAnimeVost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=255, null=True)),
                ('anime', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='anime_series', to='anime.animevost')),
            ],
        ),
        migrations.CreateModel(
            name='ScreenImagesAnimeVost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ImageField(upload_to='screen_images/')),
                ('anime', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='screen_images', to='anime.animevost')),
            ],
        ),
        migrations.AddField(
            model_name='animevost',
            name='genre',
            field=models.ManyToManyField(blank=True, related_name='animevost', to='anime.genre'),
        ),
        migrations.AddField(
            model_name='animevost',
            name='screen_image',
            field=models.ManyToManyField(blank=True, related_name='animevost', to='anime.screenimagesanimevost'),
        ),
        migrations.AddField(
            model_name='animevost',
            name='series',
            field=models.ManyToManyField(blank=True, related_name='animevost', to='anime.seriesanimevost'),
        ),
        migrations.CreateModel(
            name='AniLibria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anime_id', models.IntegerField(unique=True)),
                ('code', models.CharField(max_length=255)),
                ('name_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, max_length=255, null=True)),
                ('name_alternative', models.CharField(blank=True, max_length=255, null=True)),
                ('ordinal', models.IntegerField()),
                ('announce', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'In progress'), (2, 'Completed'), (3, 'Is hidden'), (4, 'Un ongoing')])),
                ('updated', models.DateTimeField(blank=True, help_text='Last tile update (Usually the title is updated when new releases are released)', null=True)),
                ('last_change', models.DateTimeField(blank=True, help_text='Last title change (For example, a description or announcement)', null=True)),
                ('season', models.IntegerField(choices=[(1, 'Winter'), (2, 'Spring'), (3, 'Summer'), (4, 'Autumn')])),
                ('week_day', models.IntegerField(blank=True, choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], null=True)),
                ('description', models.TextField()),
                ('in_favorites', models.IntegerField()),
                ('blocked', models.BooleanField(default=False, help_text='The title is blocked in the Russian Federation')),
                ('bakanim', models.BooleanField(default=False, help_text='Title blocked due to Wakanim complaints')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('anime_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ani_libria', to='anime.anilibriatype')),
                ('franchise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ani_libria', to='anime.franchise')),
                ('genres', models.ManyToManyField(blank=True, related_name='anilibria', to='anime.genre')),
                ('releases', models.ManyToManyField(blank=True, to='anime.anilibria')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='anilibria', to='anime.team')),
            ],
        ),
    ]
